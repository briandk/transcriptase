{
  "name": "transcriptase",
  "productName": "Transcriptase",
  "main": "out/main.js",
  "version": "0.5.3",
  "description": "A Github Electron app for creating and editing Transdown files (briandk.com/transdown)",
  "license": "AGPL-3.0",
  "private": true,
  "author": {
    "name": "Brian Danielak",
    "email": "briandaniela.k+github@gmail.com",
    "url": "http://briandk.com/transcriptase"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/briandk/transcriptase.git"
  },
  "homepage": "http://transcriptase.tech",
  "build": {
    "appId": "com.episteme.transcriptase",
    "files": [
      "!src",
      "!docs",
      "!tsconfig.json",
      "!fuse.js",
      "!dev-app-update.yml",
      "!README.md",
      "!LICENSE",
      "!globals.d.ts"
    ],
    "linux": {
      "target": [
        "snap"
      ]
    },
    "mac": {
      "category": "public.app-category.productivity",
      "target": "dmg"
    },
    "publish": {
      "owner": "briandk",
      "provider": "github",
      "repo": "transcriptase"
    },
    "win": {
      "target": [
        "nsis"
      ]
    }
  },
  "scripts": {
    "clean": "rm -rf .fusebox out dist coverage",
    "compile": "electron-webpack",
    "coverage:upload": "cat ./coverage/lcov.info | coveralls",
    "coverage": "yarn test --coverage --no-cache",
    "dist": "yarn compile && electron-builder",
    "dist:all": "electron-builder --mac --win --linux --ia32 --x64",
    "draft": "electron-builder -p always --draft --mac --win --linux --ia32 --x64",
    "format": "prettier --write **/*.ts && tslint -p . --fix",
    "lint": "tslint --project .",
    "pack": "electron-builder --dir",
    "postinstall": "electron-builder install-app-deps",
    "publish-binaries-to-github": "yarn dist --publish onTagOrDraft",
    "precommit": "lint-staged",
    "prepush": "npm-run-all typecheck lint",
    "sanity": "npm-run-all clean typecheck lint test clean compile clean",
    "start": "electron-webpack dev",
    "test": "jest",
    "typecheck": "tsc -p . --noEmit --pretty"
  },
  "dependencies": {
    "dropzone": "^5.4.0",
    "electron-devtools-installer": "^2.2.4",
    "electron-is-dev": "^0.3.0",
    "electron-log": "^2.2.13",
    "electron-window-state-manager": "^0.3.2",
    "emotion": "^9.2.6",
    "glamor": "^2.20.40",
    "glamorous": "^4.13.1",
    "immutable": "^3.8.2",
    "is-hotkey": "^0.1.2",
    "mousetrap": "^1.6.1",
    "prismjs": "^1.15.0",
    "react": "^16.3.2",
    "react-dom": "^16.4.1",
    "react-dropzone": "^4.2.12",
    "react-emotion": "^9.2.6",
    "slate": "^0.36.0",
    "slate-plain-serializer": "^0.5.22",
    "slate-react": "^0.14.1",
    "slate-trailing-block": "^0.5.0",
    "source-map-support": "^0.5.6",
    "uikit": "^3.0.0-rc.9"
  },
  "devDependencies": {
    "@types/electron-devtools-installer": "^2.0.3",
    "@types/electron-is-dev": "^0.3.0",
    "@types/is-hotkey": "^0.1.0",
    "@types/jest": "^23.3.1",
    "@types/mousetrap": "^1.6.0",
    "@types/node": "^10.5.4",
    "@types/prismjs": "^1.9.0",
    "@types/react-dom": "^16.0.3",
    "@types/react-dropzone": "^4.2.0",
    "@types/react-test-renderer": "^16.0.0",
    "@types/slate": "^0.33.2",
    "@types/slate-plain-serializer": "^0.5.1",
    "@types/slate-react": "^0.12.1",
    "@types/uikit": "^2.27.6",
    "babel-preset-react": "^6.24.1",
    "coveralls": "^3.0.0",
    "devtron": "^1.4.0",
    "electron": "2.0.5",
    "electron-builder": "^20.15.1",
    "electron-webpack": "^2.1.2",
    "electron-webpack-ts": "^2.0.2",
    "fuse-box": "^3.0.2",
    "husky": "^0.14.3",
    "jest": "^23.1.0",
    "jest-expect-contain-deep": "^1.0.1",
    "lint-staged": "^7.1.2",
    "npm-run-all": "^4.1.2",
    "prettier": "^1.9.2",
    "react-powerplug": "^1.0.0-rc.1",
    "react-quill": "^1.3.1",
    "react-test-renderer": "^16.2.0",
    "ts-jest": "^23.0.1",
    "ts-loader": "^4.3.0",
    "ts-node": "^6.0.5",
    "tslint": "^5.8.0",
    "tslint-config-prettier": "^1.6.0",
    "typescript": "^2.8.3",
    "webpack": "^4.16.3"
  },
  "jest": {
    "verbose": true,
    "testURL": "http://localhost/",
    "setupFiles": [
      "./test/setup.ts"
    ],
    "transform": {
      ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
    },
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/test/mock-file.ts",
      "\\.(css|less)$": "<rootDir>/test/mock-style.ts"
    },
    "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "json"
    ],
    "coveragePathIgnorePatterns": [
      "./node_modules",
      "./out",
      "./build",
      "./dist",
      "./test",
      "./docs"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 90,
        "functions": 95,
        "lines": 95,
        "statements": 95
      }
    },
    "collectCoverage": false
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "prettier --write",
      "tslint --fix",
      "git add"
    ]
  }
}
